apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'io.franzbecker.gradle-lombok'
//apply plugin: 'war'
apply plugin: 'com.diffplug.spotless'
apply plugin: 'org.gradlewebtools.minify'

group 'com.parker'
version = '1.0.0'

sourceCompatibility = 1.17
targetCompatibility = 1.17
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    //spring Base
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // for javax.persistence
    implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.9.0'
    // for jakarta.servlet
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // Database
    implementation 'com.microsoft.sqlserver:mssql-jdbc:7.3.0.jre8-preview'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit'

    // For war
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'

    // Http Client
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    
    // Mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation group: 'org.mnode.ical4j', name: 'ical4j', version: '4.0.0-beta8'
			
	// kafka
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	
	//redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.session:spring-session-core'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation group: 'redis.clients', name: 'jedis', version: '3.7.1' //session-data-redis有限定版本

    //MySQL
    implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.3.0'
    //mybatis
    implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '3.0.3'
    implementation group: 'org.mybatis', name: 'mybatis', version: '3.5.16'

    //jta Atomikos
    implementation 'org.springframework.boot:spring-boot-starter-jta-atomikos:2.7.18'
    implementation 'jakarta.transaction:jakarta.transaction-api:2.0.1'

    // Csv export
    implementation 'net.sf.supercsv:super-csv:2.4.0'

    // POI
	implementation 'org.apache.poi:poi:5.2.2'
    implementation 'org.apache.poi:poi-ooxml:5.2.2'

	// Jasperreports
	implementation 'net.sf.jasperreports:jasperreports:6.19.0'
	implementation 'net.sf.jasperreports:jasperreports-fonts:6.19.0'
	implementation 'com.lowagie:itext:2.1.7'
	
    // Http Client
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.4'

    //Jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'
    
    // axis 2
    implementation group: 'org.apache.axis2', name: 'axis2-adb', version: '1.6.2'
    implementation group: 'org.apache.axis2', name: 'axis2-transport-http', version: '1.6.2'
    implementation group: 'org.apache.axis2', name: 'axis2-transport-local', version: '1.6.2'
        
    //soap
    implementation group: 'jakarta.xml.soap', name: 'jakarta.xml.soap-api', version: '3.0.1'
    implementation group: 'jakarta.activation', name: 'jakarta.activation-api', version: '2.1.2'
    implementation group: 'com.sun.xml.messaging.saaj', name: 'saaj-impl', version: '3.0.1'

    //ssh
    implementation group: 'com.github.mwiede', name: 'jsch', version: '0.2.17'

    //smb
    implementation group: 'org.codelibs', name: 'jcifs', version: '2.1.38'

    // ESAPI
    implementation ('org.owasp.esapi:esapi:2.4.0.0'){
        exclude group: 'log4j', module: 'log4j'
    }
    
    // FTP
    implementation 'commons-net:commons-net:3.8.0'

    // FTP connection pool
    implementation 'org.apache.commons:commons-pool2:2.11.1'

    // guava
    implementation group: 'com.google.guava', name: 'guava', version: '33.3.1-jre'

    // google java format
    implementation 'com.google.googlejavaformat:google-java-format:1.25.0'

    //Spring Boot Starter Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.4.1'

    implementation files('lib/cloud-base-3.0.0.jar')
}

buildscript {
    repositories {
     	 maven {
            url uri("${projectDir}/lib")
        }
        
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        // Spring boot
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:3.4.0'

        // Lombok
        //classpath 'io.franzbecker:gradle-lombok:1.18.34'

        // Format code
        classpath 'com.diffplug.spotless:spotless-plugin-gradle:6.25.0'
        classpath 'org.gradle-webtools.minify:gradle-minify-plugin:1.3.0'
    }
}

springBoot {
    mainClass = 'com.bi.base.ApplicationMain'
}

task minifyJS(type: org.gradlewebtools.minify.JsMinifyTask) {
    srcDir = project.file("${buildDir}/resources/main/static/model")
    dstDir = project.file("${buildDir}/resources/main/static/model")
    options.originalFileNames = true
}

spotless {
    java {
        //googleJavaFormat()
        eclipse().configFile 'config/format/style-java.xml'
        licenseHeader '/*\n * Copyright (c) $YEAR -Parker.\n * All rights reserved.\n */'
    }
    format 'javascript', {
        target 'src/main/resources/static/model/**/*.js', 'src/main/resources/static/js/bi/**/*.js'
        prettier().configFile('config/format/style-javascript.json')
    }
}

//war {
//    enabled = false
//}

//bootWar {
//    dependsOn minifyJS
//    archiveFileName = 'pbs.war'
//}
